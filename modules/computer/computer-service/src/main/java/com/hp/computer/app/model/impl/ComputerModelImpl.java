/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.hp.computer.app.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.hp.computer.app.model.Computer;
import com.hp.computer.app.model.ComputerModel;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.exportimport.kernel.lar.StagedModelType;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.PortalUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the Computer service. Represents a row in the &quot;CMP_Computer&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link ComputerModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link ComputerImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see ComputerImpl
 * @see Computer
 * @see ComputerModel
 * @generated
 */
@ProviderType
public class ComputerModelImpl extends BaseModelImpl<Computer>
	implements ComputerModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a computer model instance should use the {@link Computer} interface instead.
	 */
	public static final String TABLE_NAME = "CMP_Computer";
	public static final Object[][] TABLE_COLUMNS = {
			{ "uuid_", Types.VARCHAR },
			{ "computerId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "company", Types.VARCHAR },
			{ "modelName", Types.VARCHAR },
			{ "operatingSystem", Types.VARCHAR },
			{ "cost", Types.DOUBLE },
			{ "rating", Types.INTEGER }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("uuid_", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("computerId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("company", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("modelName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("operatingSystem", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("cost", Types.DOUBLE);
		TABLE_COLUMNS_MAP.put("rating", Types.INTEGER);
	}

	public static final String TABLE_SQL_CREATE = "create table CMP_Computer (uuid_ VARCHAR(75) null,computerId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,company VARCHAR(75) null,modelName VARCHAR(75) null,operatingSystem VARCHAR(75) null,cost DOUBLE,rating INTEGER)";
	public static final String TABLE_SQL_DROP = "drop table CMP_Computer";
	public static final String ORDER_BY_JPQL = " ORDER BY computer.computerId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY CMP_Computer.computerId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.hp.computer.app.service.util.ServiceProps.get(
				"value.object.entity.cache.enabled.com.hp.computer.app.model.Computer"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.hp.computer.app.service.util.ServiceProps.get(
				"value.object.finder.cache.enabled.com.hp.computer.app.model.Computer"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.hp.computer.app.service.util.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.hp.computer.app.model.Computer"),
			true);
	public static final long COMPANYID_COLUMN_BITMASK = 1L;
	public static final long GROUPID_COLUMN_BITMASK = 2L;
	public static final long UUID_COLUMN_BITMASK = 4L;
	public static final long COMPUTERID_COLUMN_BITMASK = 8L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.hp.computer.app.service.util.ServiceProps.get(
				"lock.expiration.time.com.hp.computer.app.model.Computer"));

	public ComputerModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _computerId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setComputerId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _computerId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return Computer.class;
	}

	@Override
	public String getModelClassName() {
		return Computer.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("uuid", getUuid());
		attributes.put("computerId", getComputerId());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("company", getCompany());
		attributes.put("modelName", getModelName());
		attributes.put("operatingSystem", getOperatingSystem());
		attributes.put("cost", getCost());
		attributes.put("rating", getRating());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String uuid = (String)attributes.get("uuid");

		if (uuid != null) {
			setUuid(uuid);
		}

		Long computerId = (Long)attributes.get("computerId");

		if (computerId != null) {
			setComputerId(computerId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		String company = (String)attributes.get("company");

		if (company != null) {
			setCompany(company);
		}

		String modelName = (String)attributes.get("modelName");

		if (modelName != null) {
			setModelName(modelName);
		}

		String operatingSystem = (String)attributes.get("operatingSystem");

		if (operatingSystem != null) {
			setOperatingSystem(operatingSystem);
		}

		Double cost = (Double)attributes.get("cost");

		if (cost != null) {
			setCost(cost);
		}

		Integer rating = (Integer)attributes.get("rating");

		if (rating != null) {
			setRating(rating);
		}
	}

	@Override
	public String getUuid() {
		if (_uuid == null) {
			return "";
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_originalUuid == null) {
			_originalUuid = _uuid;
		}

		_uuid = uuid;
	}

	public String getOriginalUuid() {
		return GetterUtil.getString(_originalUuid);
	}

	@Override
	public long getComputerId() {
		return _computerId;
	}

	@Override
	public void setComputerId(long computerId) {
		_computerId = computerId;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException pe) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@Override
	public String getUserName() {
		if (_userName == null) {
			return "";
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		_modifiedDate = modifiedDate;
	}

	@Override
	public String getCompany() {
		if (_company == null) {
			return "";
		}
		else {
			return _company;
		}
	}

	@Override
	public void setCompany(String company) {
		_company = company;
	}

	@Override
	public String getModelName() {
		if (_modelName == null) {
			return "";
		}
		else {
			return _modelName;
		}
	}

	@Override
	public void setModelName(String modelName) {
		_modelName = modelName;
	}

	@Override
	public String getOperatingSystem() {
		if (_operatingSystem == null) {
			return "";
		}
		else {
			return _operatingSystem;
		}
	}

	@Override
	public void setOperatingSystem(String operatingSystem) {
		_operatingSystem = operatingSystem;
	}

	@Override
	public double getCost() {
		return _cost;
	}

	@Override
	public void setCost(double cost) {
		_cost = cost;
	}

	@Override
	public int getRating() {
		return _rating;
	}

	@Override
	public void setRating(int rating) {
		_rating = rating;
	}

	@Override
	public StagedModelType getStagedModelType() {
		return new StagedModelType(PortalUtil.getClassNameId(
				Computer.class.getName()));
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			Computer.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public Computer toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (Computer)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		ComputerImpl computerImpl = new ComputerImpl();

		computerImpl.setUuid(getUuid());
		computerImpl.setComputerId(getComputerId());
		computerImpl.setGroupId(getGroupId());
		computerImpl.setCompanyId(getCompanyId());
		computerImpl.setUserId(getUserId());
		computerImpl.setUserName(getUserName());
		computerImpl.setCreateDate(getCreateDate());
		computerImpl.setModifiedDate(getModifiedDate());
		computerImpl.setCompany(getCompany());
		computerImpl.setModelName(getModelName());
		computerImpl.setOperatingSystem(getOperatingSystem());
		computerImpl.setCost(getCost());
		computerImpl.setRating(getRating());

		computerImpl.resetOriginalValues();

		return computerImpl;
	}

	@Override
	public int compareTo(Computer computer) {
		long primaryKey = computer.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof Computer)) {
			return false;
		}

		Computer computer = (Computer)obj;

		long primaryKey = computer.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		ComputerModelImpl computerModelImpl = this;

		computerModelImpl._originalUuid = computerModelImpl._uuid;

		computerModelImpl._originalGroupId = computerModelImpl._groupId;

		computerModelImpl._setOriginalGroupId = false;

		computerModelImpl._originalCompanyId = computerModelImpl._companyId;

		computerModelImpl._setOriginalCompanyId = false;

		computerModelImpl._setModifiedDate = false;

		computerModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<Computer> toCacheModel() {
		ComputerCacheModel computerCacheModel = new ComputerCacheModel();

		computerCacheModel.uuid = getUuid();

		String uuid = computerCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			computerCacheModel.uuid = null;
		}

		computerCacheModel.computerId = getComputerId();

		computerCacheModel.groupId = getGroupId();

		computerCacheModel.companyId = getCompanyId();

		computerCacheModel.userId = getUserId();

		computerCacheModel.userName = getUserName();

		String userName = computerCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			computerCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			computerCacheModel.createDate = createDate.getTime();
		}
		else {
			computerCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			computerCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			computerCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		computerCacheModel.company = getCompany();

		String company = computerCacheModel.company;

		if ((company != null) && (company.length() == 0)) {
			computerCacheModel.company = null;
		}

		computerCacheModel.modelName = getModelName();

		String modelName = computerCacheModel.modelName;

		if ((modelName != null) && (modelName.length() == 0)) {
			computerCacheModel.modelName = null;
		}

		computerCacheModel.operatingSystem = getOperatingSystem();

		String operatingSystem = computerCacheModel.operatingSystem;

		if ((operatingSystem != null) && (operatingSystem.length() == 0)) {
			computerCacheModel.operatingSystem = null;
		}

		computerCacheModel.cost = getCost();

		computerCacheModel.rating = getRating();

		return computerCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(27);

		sb.append("{uuid=");
		sb.append(getUuid());
		sb.append(", computerId=");
		sb.append(getComputerId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", company=");
		sb.append(getCompany());
		sb.append(", modelName=");
		sb.append(getModelName());
		sb.append(", operatingSystem=");
		sb.append(getOperatingSystem());
		sb.append(", cost=");
		sb.append(getCost());
		sb.append(", rating=");
		sb.append(getRating());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(43);

		sb.append("<model><model-name>");
		sb.append("com.hp.computer.app.model.Computer");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>uuid</column-name><column-value><![CDATA[");
		sb.append(getUuid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>computerId</column-name><column-value><![CDATA[");
		sb.append(getComputerId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>company</column-name><column-value><![CDATA[");
		sb.append(getCompany());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modelName</column-name><column-value><![CDATA[");
		sb.append(getModelName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>operatingSystem</column-name><column-value><![CDATA[");
		sb.append(getOperatingSystem());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>cost</column-name><column-value><![CDATA[");
		sb.append(getCost());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>rating</column-name><column-value><![CDATA[");
		sb.append(getRating());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = Computer.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			Computer.class, ModelWrapper.class
		};
	private String _uuid;
	private String _originalUuid;
	private long _computerId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private long _userId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private String _company;
	private String _modelName;
	private String _operatingSystem;
	private double _cost;
	private int _rating;
	private long _columnBitmask;
	private Computer _escapedModel;
}